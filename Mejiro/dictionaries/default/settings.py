# Mejiro設定ファイル
# 変換ロジックや辞書の設定をここで行う

# 基本子音ストロークの定義
# (変更時は配列の右側のアルファベットを変更する)
# STKN
# ストローク -> 基本子音 (s, t, k, n, r, w, h, z, d, g, b, p, m, y, f, l)
conso_stroke_to_roma = [ # (ストローク, 子音)
    ["", ''], ["S", 's'], ["T", 't'], ["K", 'k'], ["N", 'n'], 
    ["ST", 'r'], ["SK", 'w'], ["TK", 'h'],
    ["SN", 'z'], ["TN", 'd'], ["KN", 'g'], ["TKN", 'b'],
    ["STK", 'p'], ["STN", 'l'], ["SKN", 'm'], ["STKN", 'f']
]

# 基本母音ストロークの定義 (二重母音は除外)
# (変更時は配列の右側のアルファベットを変更する)
# YIAU
# ストローク -> 基本母音 (a, i, u, e, o, ya, yu, yo)
vowel_stroke_to_roma = [ # (ストローク, 母音)
    ['A', 'a'], ['I', 'i'], ['U', 'u'], ['IA', 'e'], ['AU', 'o'],
    ["YA", 'ya'], ["YU", 'yu'], ["YAU", 'yo']
]

# 二重母音ストロークの定義（親指を使うものは除外）
# (変更時はマップの右側の配列のアルファベット・ひらがなを変更する)
# YIAU
DIPHTHONG_MAPPING = { # ストローク: (一文字目の母音, 二文字目)
    "Y": ("a", "い"),
    "YI": ("yo", "う"),
    "YIA": ("e", "い"),
    "YIU": ("yu", "う"),
    "YIAU": ("u", "う"),
    "IU": ("u", "い"),
    "IAU": ("o", "う"),
}
# 親指も使った二重母音ストロークの定義
# (変更時はマップの右側の配列のアルファベット・ひらがなを変更する)
# YIAUn
COMPLEX_DIPHTHONG_MAPPING = { # ストローク: (一文字目の母音, 二文字目)
    "YIn": ("i", "い"),
    "YIUn": ("a", "え"),
    "IAUn": ("o", "お"),
    "YIAUn": ("o", "い"),
}
# 親指を使った二重母音のストロークをここにも再掲
exception_particle = ["YIn", "YIUn", "IAUn", "YIAUn"]

# 行段のアルファベットからひらがなへのマッピング
ROMA_TO_KANA_MAP = {
    '':  ['あ', 'い', 'う', 'え', 'お', 'や', 'ゆ', 'よ'],
    'k': ['か', 'き', 'く', 'け', 'こ', 'きゃ', 'きゅ', 'きょ'],
    's': ['さ', 'し', 'す', 'せ', 'そ', 'しゃ', 'しゅ', 'しょ'],
    't': ['た', 'ち', 'つ', 'て', 'と', 'ちゃ', 'ちゅ', 'ちょ'],
    'n': ['な', 'に', 'ぬ', 'ね', 'の', 'にゃ', 'にゅ', 'にょ'],
    'h': ['は', 'ひ', 'ふ', 'へ', 'ほ', 'ひゃ', 'ひゅ', 'ひょ'],
    'm': ['ま', 'み', 'む', 'め', 'も', 'みゃ', 'みゅ', 'みょ'],
    'r': ['ら', 'り', 'る', 'れ', 'ろ', 'りゃ', 'りゅ', 'りょ'],
    'w': ['わ', 'うぃ', 'ゔ', 'うぇ', 'を', 'やあ', 'いう', 'うぉ'],
    'g': ['が', 'ぎ', 'ぐ', 'げ', 'ご', 'ぎゃ', 'ぎゅ', 'ぎょ'],
    'z': ['ざ', 'じ', 'ず', 'ぜ', 'ぞ', 'じゃ', 'じゅ', 'じょ'],
    'd': ['だ', 'ぢ', 'づ', 'で', 'ど', 'でぃ', 'てぃ', 'どぅ'],
    'b': ['ば', 'び', 'ぶ', 'べ', 'ぼ', 'びゃ', 'びゅ', 'びょ'],
    'p': ['ぱ', 'ぴ', 'ぷ', 'ぺ', 'ぽ', 'ぴゃ', 'ぴゅ', 'ぴょ'],
    'f': ['ふぁ', 'ふぃ', 'ふ', 'ふぇ', 'ふぉ', 'じぇ', 'しぇ', 'ちぇ'],
    'l': ['ぁ', 'ぃ', 'ぅ', 'ぇ', 'ぉ', 'ゃ', 'ゅ', 'ょ']
}

# 助詞のキーと対応する文字列の定義
PARTICLE_KEY_LIST = ["", "n", "t", "k", "tk", "nt", "nk", "ntk"]
# 追加音の定義
SECOND_SOUND_LIST = ["", "ん", "つ", "く", "っ", "ち", "き", "ー"]

# 変換&確定をよく使うので変数にしておく
henkan_command = "}{#Space}{#Return}{"

# ドット、コンマの定義(変換コマンドはオプションです)
DOT = "。" + henkan_command
COMMA = "、" + henkan_command

# 左側の助詞文字列の定義
L_PARTICLE = ["", COMMA, "に", "の", "で", "と", "を", "か"]

# 右側の助詞文字列の定義
R_PARTICLE = ["", COMMA, "は", "が", "も", "は" + COMMA, "が" + COMMA, "も" + COMMA]

# 例外的な助詞ストロークのマッピング
EXCEPTION_STROKE_MAP = {
    "-n": "}{#Return}{", "n-": "}{#Space}{", "n-n": henkan_command, 
    "-nt": DOT, "-nk": COMMA, "-ntk": "や",
    "n-nt": "?", "n-nk": "!", "n-ntk": "や" + COMMA,
    "k-k": "のほう", "nt-k": "ということ", "ntk-k": "かどうか"
}

# 略語の定義
ABSTRACT_ABBREVIATIONS_MAP = {
    "とこ": "ところ",
    "とお": "とおり",
    "あた": "あたり",
    "つも": "つもり",
    "すべ": "すべて",
    "なが": "ながら",
    "おか": "おかげ",
    "しご": "しごと",
    "であ": "である",
}